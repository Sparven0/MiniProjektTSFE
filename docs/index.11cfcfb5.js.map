{"mappings":"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","sources":["<anon>","src/modules/main.ts","src/modules/functions.ts"],"sourcesContent":["const $4b9077a24b0984a4$var$url = `http://localhost:3030/books`;\nasync function $4b9077a24b0984a4$export$7a171f172be0782e() {\n    const res = await fetch($4b9077a24b0984a4$var$url);\n    if (!res.ok) throw new Error(\"Network response was not ok\");\n    const data = await res.json();\n    if (data) console.log(\"Books array:\", data);\n    else console.log(\"Books property is undefined or missing.\");\n    return data;\n}\nasync function $4b9077a24b0984a4$export$6373dd84ef636dd1(ID, readStat) {\n    const specUrl = `${$4b9077a24b0984a4$var$url}/${ID}/readstatus`;\n    const body = {\n        read: readStat\n    };\n    const options = {\n        method: 'PUT',\n        headers: {\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    };\n    try {\n        const res = await fetch(specUrl, options);\n        const data = await res.json();\n        console.log(data);\n    } catch (e) {\n        console.log('Error updating readstatus', e);\n    }\n}\nasync function $4b9077a24b0984a4$export$7e633e93b70e51dc(id, reviewStat) {\n    const specUrl = `${$4b9077a24b0984a4$var$url}/${id}/reviewstatus`;\n    const body = {\n        review: `${reviewStat}`\n    };\n    const options = {\n        method: 'PATCH',\n        headers: {\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    };\n    try {\n        const res = await fetch(specUrl, options);\n        const data = await res.json();\n    } catch (e) {\n        console.log('Error updating status:', e);\n    }\n}\nasync function $4b9077a24b0984a4$export$4228764de4141ed1(title, writer, read, callback) {\n    const body = {\n        ID: Date.now(),\n        title: title,\n        writer: writer,\n        read: read,\n        review: ''\n    };\n    const options = {\n        method: 'POST',\n        headers: {\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    };\n    try {\n        const specUrl = `${$4b9077a24b0984a4$var$url}/new`;\n        const res = await fetch(specUrl, options);\n        const data = await res.json();\n        console.log(data);\n        callback();\n    } catch (e) {\n        console.log('Error writing book:', e);\n    }\n}\nasync function $4b9077a24b0984a4$export$30a4bde26e9c5b76(id, callback) {\n    const specUrl = `${$4b9077a24b0984a4$var$url}/${id}/delete`;\n    const options = {\n        method: 'DELETE',\n        headers: {\n            'Content-type': 'application/json'\n        }\n    };\n    try {\n        const res = await fetch(specUrl, options);\n        const data = await res.json();\n        console.log(data);\n        callback();\n    } catch (e) {\n        console.log('Error deleting book:', e);\n    }\n}\n\n\nconst $050458113e8d78dc$var$form = document.querySelector('form');\nasync function $050458113e8d78dc$var$displayBookIds() {\n    try {\n        const data = await (0, $4b9077a24b0984a4$export$7a171f172be0782e)();\n        console.log(data);\n        if (data.books && Array.isArray(data.books)) data.books.forEach(function(book) {\n            const bookWrapper = document.createElement(\"div\");\n            bookWrapper.classList.add(\"bookwrapper\");\n            const saveBtn = document.createElement(\"button\");\n            saveBtn.innerText = \"Save\";\n            const titleEl = document.createElement(\"p\");\n            const writerEl = document.createElement(\"p\");\n            const readElTxt = document.createElement(\"p\");\n            const readEl = document.createElement(\"input\");\n            readElTxt.innerText = `Read: ${book.read}`;\n            readEl.setAttribute(\"type\", \"checkbox\");\n            readEl.checked = book.read;\n            readEl.addEventListener(\"change\", ()=>{\n                reviewEl.disabled = !readEl.checked;\n                const readStat = readEl.checked;\n                readElTxt.innerText = `Read: ${readStat ? \"true\" : \"false\"}`;\n                if (readStat && reviewEl.value === 'disliked') addRemoveButton();\n                else removeRemoveButton();\n            });\n            const reviewEl = document.createElement(\"select\");\n            const options = [\n                \"no comment\",\n                \"liked\",\n                \"disliked\"\n            ];\n            options.forEach((optionText)=>{\n                const optionEl = document.createElement(\"option\");\n                optionEl.value = optionText;\n                optionEl.innerText = optionText;\n                reviewEl.appendChild(optionEl);\n            });\n            reviewEl.value = book.review;\n            reviewEl.disabled = !readEl.checked;\n            let reviewStat = '';\n            reviewEl.addEventListener('change', ()=>{\n                reviewStat = reviewEl.value;\n                if (reviewStat === 'disliked' && readEl.checked) addRemoveButton();\n                else removeRemoveButton();\n            });\n            function addRemoveButton() {\n                if (!bookWrapper.querySelector('.removeBtn')) {\n                    const removeBtn = document.createElement('button');\n                    removeBtn.innerText = 'Remove';\n                    removeBtn.classList.add('removeBtn');\n                    bookWrapper.append(removeBtn);\n                    removeBtn.addEventListener('click', async ()=>{\n                        await (0, $4b9077a24b0984a4$export$30a4bde26e9c5b76)(book.ID, $050458113e8d78dc$var$displayBookIds);\n                        location.reload();\n                    });\n                }\n            }\n            function removeRemoveButton() {\n                const removeBtn = bookWrapper.querySelector('.removeBtn');\n                if (removeBtn) removeBtn.remove();\n            }\n            writerEl.innerText = `Writer: ${book.writer}`;\n            titleEl.innerText = `Title: ${book.title}`;\n            document.body.append(bookWrapper);\n            bookWrapper.append(titleEl, writerEl, readEl, reviewEl, saveBtn, readElTxt);\n            if (book.read && book.review === 'disliked') addRemoveButton();\n            saveBtn.addEventListener(\"click\", async ()=>{\n                console.log(book.ID);\n                const readStat = readEl.checked;\n                await (0, $4b9077a24b0984a4$export$6373dd84ef636dd1)(book.ID, readStat);\n                await (0, $4b9077a24b0984a4$export$7e633e93b70e51dc)(book.ID, reviewStat);\n                if (readStat && reviewEl.value === 'disliked') addRemoveButton();\n                else removeRemoveButton();\n            });\n        });\n        else console.log(\"Data is not in the expected format or 'books' property is missing.\");\n    } catch (error) {\n        console.error(\"Error fetching data:\", error);\n    }\n}\n$050458113e8d78dc$var$form?.addEventListener('submit', (event)=>{\n    event.preventDefault();\n    const formData = new FormData($050458113e8d78dc$var$form);\n    const title = formData.get('title');\n    const writer = formData.get('writer');\n    const read = formData.get('read');\n    location.reload();\n    const readBoolean = read !== null && typeof read === 'string' && read === 'on';\n    (0, $4b9077a24b0984a4$export$4228764de4141ed1)(title, writer, readBoolean, ()=>{\n        $050458113e8d78dc$var$displayBookIds();\n    });\n});\n$050458113e8d78dc$var$displayBookIds();\n\n\n//# sourceMappingURL=index.11cfcfb5.js.map\n","import { getData } from \"./functions\";\nimport { changeReadStatus } from \"./functions\";\nimport { changeReviewStatus } from \"./functions\";\nimport { writeBook } from \"./functions\";\nimport { deleteBook } from \"./functions\";\n\nconst form = document.querySelector('form');\n\nasync function displayBookIds() {\n  try {\n    const data = await getData();\n    console.log(data);\n    if (data.books && Array.isArray(data.books)) {\n      data.books.forEach(function (book: {\n        title: string;\n        writer: string;\n        read: boolean;\n        review: string;\n        ID: number;\n      }) {\n        const bookWrapper = document.createElement(\"div\");\n        bookWrapper.classList.add(\"bookwrapper\");\n\n        const saveBtn = document.createElement(\"button\");\n        saveBtn.innerText = \"Save\";\n\n        const titleEl = document.createElement(\"p\");\n        const writerEl = document.createElement(\"p\");\n        const readElTxt = document.createElement(\"p\");\n        const readEl = document.createElement(\"input\");\n\n        readElTxt.innerText = `Read: ${book.read}`;\n        readEl.setAttribute(\"type\", \"checkbox\");\n        readEl.checked = book.read;\n\n        readEl.addEventListener(\"change\", () => {\n          reviewEl.disabled = !readEl.checked;\n          const readStat = readEl.checked;\n          readElTxt.innerText = `Read: ${readStat ? \"true\" : \"false\"}`;\n          if (readStat && reviewEl.value === 'disliked') {\n            addRemoveButton();\n          } else {\n            removeRemoveButton();\n          }\n        });\n\n        const reviewEl = document.createElement(\"select\");\n        const options = [\"no comment\", \"liked\", \"disliked\"];\n        options.forEach((optionText) => {\n          const optionEl = document.createElement(\"option\");\n          optionEl.value = optionText;\n          optionEl.innerText = optionText;\n          reviewEl.appendChild(optionEl);\n        });\n\n        reviewEl.value = book.review;\n        reviewEl.disabled = !readEl.checked;\n\n        let reviewStat = '';\n        reviewEl.addEventListener('change', () => {\n          reviewStat = reviewEl.value;\n          if (reviewStat === 'disliked' && readEl.checked) {\n            addRemoveButton();\n          } else {\n            removeRemoveButton();\n          }\n        });\n        function addRemoveButton() {\n          if (!bookWrapper.querySelector('.removeBtn')) {\n            const removeBtn = document.createElement('button');\n            removeBtn.innerText = 'Remove';\n            removeBtn.classList.add('removeBtn');\n            bookWrapper.append(removeBtn);\n            removeBtn.addEventListener('click', async () => {\n              await deleteBook(book.ID, displayBookIds);\n              location.reload();\n            });\n          }\n        }\n        function removeRemoveButton() {\n          const removeBtn = bookWrapper.querySelector('.removeBtn');\n          if (removeBtn) {\n            removeBtn.remove();\n          }\n        }\n\n        writerEl.innerText = `Writer: ${book.writer}`;\n        titleEl.innerText = `Title: ${book.title}`;\n\n        document.body.append(bookWrapper);\n        bookWrapper.append(\n          titleEl,\n          writerEl,\n          readEl,\n          reviewEl,\n          saveBtn,\n          readElTxt\n        );\n\n        if (book.read && book.review === 'disliked') {\n          addRemoveButton();\n        }\n\n        saveBtn.addEventListener(\"click\", async () => {\n          console.log(book.ID);\n          const readStat = readEl.checked;\n          await changeReadStatus(book.ID, readStat);\n          await changeReviewStatus(book.ID, reviewStat);\n\n          if (readStat && reviewEl.value === 'disliked') {\n            addRemoveButton();\n          } else {\n            removeRemoveButton();\n          }\n        });\n      });\n    } else {\n      console.log(\"Data is not in the expected format or 'books' property is missing.\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n  }\n}\n\nform?.addEventListener('submit', event => {\n  event.preventDefault();\n  const formData = new FormData(form);\n  const title = formData.get('title') as string;\n  const writer = formData.get('writer') as string;\n  const read = formData.get('read');\n  location.reload();\n  const readBoolean = read !== null && typeof read === 'string' && read === 'on';\n  writeBook(title, writer, readBoolean, () => {\n    displayBookIds();\n  });\n});\n\ndisplayBookIds();\n","\n\n\nconst url = `http://localhost:3030/books`;\nexport async function getData():Promise<any> {\n    const res = await fetch(url);\n  \n    if (!res.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    const data = await res.json();\n    if (data) {\n      console.log(\"Books array:\", data);\n    } else {\n      console.log(\"Books property is undefined or missing.\");\n    }\n    return data\n  }\n  \n\n  export async function changeReadStatus(ID:number, readStat:boolean):Promise<any>{\n    const specUrl = `${url}/${ID}/readstatus`;\n    const body = {\n        read: readStat\n    }\n    const options = {\n        method: 'PUT',\n        headers:{\n            'Content-type': 'application/json'\n        },\n        body:JSON.stringify(body)   \n    }\n    try{\n        const res = await fetch(specUrl, options);\n        const data = await res.json();\n        console.log(data)\n    } catch(e){\n        console.log('Error updating readstatus', e)\n    }\n  }\n\n  export async function changeReviewStatus(id:number, reviewStat:string):Promise<any>{\n    const specUrl = `${url}/${id}/reviewstatus`;\n    const body = {\n        review: `${reviewStat}`\n    }\n    const options = {\n        method: 'PATCH',\n        headers:{\n            'Content-type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    }\n    try{\n        const res = await fetch(specUrl, options);\n        const data = await res.json();\n    }catch(e){\n        console.log('Error updating status:', e)\n    }\n  }\n\n\n\n\n  export async function writeBook(title: string, writer: string, read: boolean, callback:Function): Promise<any> {\n    const body = {\n      ID: Date.now(),\n      title: title,\n      writer: writer,\n      read: read,\n      review: ''\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    };\n    try {\n      const specUrl = `${url}/new`\n      const res = await fetch(specUrl, options);\n      const data = await res.json();\n      console.log(data);\n      callback()\n    } catch (e) {\n      console.log('Error writing book:', e);\n    }\n  }\n\n  export async function deleteBook(id:number, callback:Function):Promise<any>{\n    const specUrl = `${url}/${id}/delete`;\n    const options = {\n      method: 'DELETE',\n      headers:{\n        'Content-type': 'application/json'\n      }\n    }\n    try{\n      const res = await fetch(specUrl, options);\n      const data = await res.json();\n      console.log(data);\n      callback()\n    } catch(e){\n      console.log('Error deleting book:', e)\n    }\n  }\n\n"],"names":["$4b9077a24b0984a4$var$url","$4b9077a24b0984a4$export$7a171f172be0782e","res","fetch","ok","Error","data","json","console","log","$4b9077a24b0984a4$export$6373dd84ef636dd1","ID","readStat","specUrl","options","method","headers","body","JSON","stringify","read","e","$4b9077a24b0984a4$export$7e633e93b70e51dc","id","reviewStat","review","$4b9077a24b0984a4$export$4228764de4141ed1","title","writer","callback","Date","now","$4b9077a24b0984a4$export$30a4bde26e9c5b76","$050458113e8d78dc$var$form","document","querySelector","$050458113e8d78dc$var$displayBookIds","books","Array","isArray","forEach","book","bookWrapper","createElement","classList","add","saveBtn","innerText","titleEl","writerEl","readElTxt","readEl","setAttribute","checked","addEventListener","reviewEl","disabled","value","addRemoveButton","removeRemoveButton","optionText","optionEl","appendChild","removeBtn","append","location","reload","remove","error","event","preventDefault","formData","FormData","get"],"version":3,"file":"index.11cfcfb5.js.map"}